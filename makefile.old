bbb:
	@echo %.c
IDIR =./include
#IDIR =./
CC=g++
CFLAGS=-I$(IDIR)

#ODIR=obj
ODIR=./output
#LDIR =../lib
LDIR =./lib

LIBS=-lm

#_DEPS = Comm_p.h defs_p.h motorInfo.h rc.h Utils_p.h Comm.h defs.h protocol.h rc_p.h serial.h Utils.h
_DEPS =  defs_p.h\
	 motorInfo.h\
	 rc.h\
	 Comm.h\
	 defs.h\
	 protocol.h\
	 rc_p.h\
	 Utils.h\
	 matrix.h\
	 init.h\
	 serial.h

_DEPS_P =./Comm/Comm_p.h\
	 ./utils/Utils_p.h
	 


DEPS_G = $(addprefix $(IDIR)/,$(_DEPS))
DEPS=  $(DEPS_G) $(_DEPS_P)
SOURCES =./motorInfo/motorInfo.c\
	./Comm/Comm.c\
	./utils/Utils.c\
	./matrix/matrix.c\
	./serial/serial.c\
	./init/init.c

 
  

_OBJ=$(SOURCES:.c=.o)
#OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))
OBJ=$(notdir $(_OBJ))

OBJECTS = $(addprefix $(ODIR)/,$(notdir $(SOURCES:%.c=%.o)))


	#$(ODIR)/%.o): %.c $(_DEPS)
$(OBJECTS) : $(SOURCES) $(DEPS) 
	@echo $(ODIR)
	@echo $@
	$(CC) -c -o $@ $< $(CFLAGS) 


motor: $(OBJECTS)
		
#	$(CC) -std=c99 -c  $@ $^ $(CFLAGS) $(LIBS)
#	$(CC) -std=c99 -c   $^ $(CFLAGS) $(LIBS)
	$(CC)   -o $@ $^ $(CFLAGS) $(LIBS) 
#	g++ -std=c++0x -c init.c
#	g++ -std=c++0x -c serial.c
#	g++ -o motor *.o
.PHONY: clean

clean:

	rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~
